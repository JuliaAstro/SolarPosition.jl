"""Unit tests for Michalsky algorithm (not yet implemented)"""

function expected_michalsky_original_julian()
    columns = [:elevation, :apparent_elevation, :zenith, :apparent_zenith, :azimuth]

    values = [
        [32.21780263, 32.24498279, 57.78219737, 57.75501721, 204.91751387],
        [32.20533693, 32.23252757, 57.79466307, 57.76747243, 204.96379895],
        [34.92279261, 34.9478766, 55.07720739, 55.0521234, 169.37618059],
        [18.63629794, 18.68330498, 71.36370206, 71.31669502, 234.18898285],
        [35.75816111, 35.78266275, 54.24183889, 54.21733725, 197.6747502],
        [-9.52972383, -8.96972383, 99.52972383, 98.96972383, 201.18805829],
        [66.85774447, 66.87103396, 23.14225553, 23.12896604, 245.08622522],
        [9.52972383, 9.62043934, 80.47027617, 80.37956066, 338.81194171],
        [50.10984044, 50.1274089, 39.89015956, 39.8725911, 326.23438218],
        [35.36181097, 35.38658543, 54.63818903, 54.61341457, 175.38864631],
        [-53.24139895, -52.68139895, 143.24139895, 142.68139895, 18.64775639],
        [-53.24139895, -52.68139895, 143.24139895, 142.68139895, 18.64775639],
        [33.19773834, 33.2241191, 56.80226166, 56.7758809, 205.09146059],
        [32.08343676, 32.11073039, 57.91656324, 57.88926961, 204.90619448],
        [-23.40757803, -22.84757803, 113.40757803, 112.84757803, 79.54939414],
        [1.10847034, 1.49128689, 88.89152966, 88.50871311, 104.54053775],
        [32.21780263, 32.24498279, 57.78219737, 57.75501721, 204.91751387],
        [32.21780263, 32.24498279, 57.78219737, 57.75501721, 204.91751387],
        [32.21780263, 32.24498279, 57.78219737, 57.75501721, 204.91751387],
    ]

    return DataFrame(reduce(hcat, values)', columns)
end

function expected_michalsky_pandas_julian()
    columns = [:elevation, :apparent_elevation, :zenith, :apparent_zenith, :azimuth]

    values = [
        [32.21780263, 32.24498279, 57.78219737, 57.75501721, 204.91751387],
        [32.20533693, 32.23252757, 57.79466307, 57.76747243, 204.96379895],
        [34.92279261, 34.9478766, 55.07720739, 55.0521234, 169.37618059],
        [18.63629794, 18.68330498, 71.36370206, 71.31669502, 234.18898285],
        [35.75816111, 35.78266275, 54.24183889, 54.21733725, 197.6747502],
        [-9.52972383, -8.96972383, 99.52972383, 98.96972383, 201.18805829],
        [66.85774447, 66.87103396, 23.14225553, 23.12896604, 245.08622522],
        [9.52972383, 9.62043934, 80.47027617, 80.37956066, 338.81194171],
        [50.10984044, 50.1274089, 39.89015956, 39.8725911, 326.23438218],
        [35.36181097, 35.38658543, 54.63818903, 54.61341457, 175.38864631],
        [-53.24139895, -52.68139895, 143.24139895, 142.68139895, 18.64775639],
        [-53.24139895, -52.68139895, 143.24139895, 142.68139895, 18.64775639],
        [32.46357112, 32.49054619, 57.53642888, 57.50945381, 204.94138737],
        [32.44484719, 32.47183777, 57.55515281, 57.52816223, 204.97918825],
        [-23.40757803, -22.84757803, 113.40757803, 112.84757803, 79.54939414],
        [1.10847034, 1.49128689, 88.89152966, 88.50871311, 104.54053775],
        [32.21780263, 32.24498279, 57.78219737, 57.75501721, 204.91751387],
        [32.21780263, 32.24498279, 57.78219737, 57.75501721, 204.91751387],
        [32.21780263, 32.24498279, 57.78219737, 57.75501721, 204.91751387],
    ]

    return DataFrame(reduce(hcat, values)', columns)
end

function expected_michalsky_spencer_false()
    columns = [:elevation, :apparent_elevation, :zenith, :apparent_zenith, :azimuth]

    values = [
        [32.21780263, 32.24498279, 57.78219737, 57.75501721, 204.91751387],
        [32.20533693, 32.23252757, 57.79466307, 57.76747243, 204.96379895],
        [34.92279261, 34.94787660, 55.07720739, 55.0521234, 169.37618059],
        [18.63629794, 18.68330498, 71.36370206, 71.31669502, 234.18898285],
        [35.75816111, 35.78266275, 54.24183889, 54.21733725, 197.67475020],
        [-9.52972383, -8.96972383, 99.52972383, 98.96972383, 201.18805829],
        [66.85774447, 66.87103396, 23.14225553, 23.12896604, 294.91377478],
        [9.52972383, 9.62043934, 80.47027617, 80.37956066, 201.18805829],
        [50.10984044, 50.1274089, 39.89015956, 39.8725911, 213.76561782],
        [35.36181097, 35.38658543, 54.63818903, 54.61341457, 175.38864631],
        [-53.24139895, -52.68139895, 143.24139895, 142.68139895, 18.64775639],
        [-53.24139895, -52.68139895, 143.24139895, 142.68139895, 18.64775639],
        [33.19773834, 33.2241191, 56.80226166, 56.7758809, 205.09146059],
        [32.08343676, 32.11073039, 57.91656324, 57.88926961, 204.90619448],
        [-23.40757803, -22.84757803, 113.40757803, 112.84757803, 79.54939414],
        [1.10847034, 1.49128689, 88.89152966, 88.50871311, 104.54053775],
        [32.21780263, 32.24498279, 57.78219737, 57.75501721, 204.91751387],
        [32.21780263, 32.24498279, 57.78219737, 57.75501721, 204.91751387],
        [32.21780263, 32.24498279, 57.78219737, 57.75501721, 204.91751387],
    ]

    return DataFrame(reduce(hcat, values)', columns)
end

@testset "Michalsky (not implemented)" begin
    @test_skip begin
        # TODO: Implement Michalsky algorithm with options:
        # - spencer_correction: true/false
        # - julian_date: "original" or "pandas"
        # struct Michalsky <: SolarAlgorithm
        #     spencer_correction::Bool
        #     julian_date::String
        # end

        @testset "Original Julian Date" begin
            df_expected = expected_michalsky_original_julian()
            conds = test_conditions()

            # Test implementation would go here
        end

        @testset "Pandas Julian Date" begin
            df_expected = expected_michalsky_pandas_julian()
            conds = test_conditions()

            # Test implementation would go here
        end

        @testset "Spencer Correction False" begin
            df_expected = expected_michalsky_spencer_false()
            conds = test_conditions()

            # Test implementation would go here
        end
    end
end
